<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:viewModel="clr-namespace:MetalServerSetupWPF.ViewModel"
                    xmlns:pages="clr-namespace:MetalServerSetupWPF.ViewModel.Pages">

    <!-- Common styles -->
    <Style TargetType="TextBlock">
        <Setter Property="Margin" Value="5" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="DescriptionTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="DescriptionTextBlockStyleImportant" TargetType="TextBlock">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="Margin" Value="5" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style TargetType="Button">
        <Setter Property="Margin" Value="5" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style TargetType="PasswordBox">
        <Setter Property="Margin" Value="5" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style TargetType="ComboBox">
        <Setter Property="Margin" Value="5" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="IsSynchronizedWithCurrentItem" Value="True" />
    </Style>

    <Style TargetType="CheckBox">
        <Setter Property="Margin" Value="5" />
    </Style>

    <!-- Metal logo style -->
    <Style x:Key="MetalLogoImageStyle" TargetType="Image">
        <Setter Property="Source" Value="Resources/MetalLogoInstaller.png" />
        <Setter Property="Margin" Value="20,0,40,0" />
    </Style>

    <!-- Page styles -->
    <Style x:Key="PageSeparatorStyle" TargetType="Separator">
        <Setter Property="Margin" Value="20,0,20,0" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
    </Style>

    <Style x:Key="PageHeaderTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="26" />
        <Setter Property="Margin" Value="20,10,10,10" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <Style x:Key="PageDescriptionTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Margin" Value="20,15,10,15" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <Style x:Key="PageContentControlStyle" TargetType="ContentControl">
        <Setter Property="Margin" Value="10,0,10,0" />
        <Setter Property="IsTabStop" Value="False" />
    </Style>

    <!-- Button list styles -->
    <Style x:Key="ButtonListItemsControlStyle" TargetType="ItemsControl">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Style="{DynamicResource ButtonListStackPanelStyle}" Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate DataType="viewModel:CommandViewModel">
                    <Button Style="{DynamicResource ButtonListItemButtonStyle}" Command="{Binding Command}" Content="{Binding DisplayName}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonListStackPanelStyle" TargetType="StackPanel">
        <Setter Property="IsItemsHost" Value="True" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="20,0,20,0" />
    </Style>

    <Style x:Key="ButtonListItemButtonStyle" TargetType="Button">
        <Setter Property="FontSize" Value="10" />
        <Setter Property="Margin" Value="5,0,5,0" />
        <Setter Property="Width" Value="76" />
        <Setter Property="Height" Value="24" />
    </Style>

    <Style x:Key="RadioButtonListItem" TargetType="{x:Type ListBoxItem}" >

        <Setter Property="Template">
            <Setter.Value>

                <ControlTemplate TargetType="ListBoxItem">

                    <DockPanel LastChildFill="True" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" VerticalAlignment="Center" >

                        <RadioButton IsChecked="{TemplateBinding IsSelected}" Focusable="False" IsHitTestVisible="False" VerticalAlignment="Center" Margin="0,0,4,0" />

                        <ContentPresenter
                        Content             = "{TemplateBinding ContentControl.Content}"
                        ContentTemplate     = "{TemplateBinding ContentControl.ContentTemplate}"
                        ContentStringFormat = "{TemplateBinding ContentControl.ContentStringFormat}"
                        HorizontalAlignment = "{TemplateBinding Control.HorizontalContentAlignment}"
                        VerticalAlignment   = "{TemplateBinding Control.VerticalContentAlignment}"
                        SnapsToDevicePixels = "{TemplateBinding UIElement.SnapsToDevicePixels}" />

                    </DockPanel>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

    </Style>

    <Style x:Key="RadioButtonList" TargetType="ListBox">

        <Style.Resources>
            <Style TargetType="Label">
                <Setter Property="Padding" Value="0" />
            </Style>
        </Style.Resources>

        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background"      Value="Transparent" />

        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel IsItemsHost="True"></WrapPanel>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemContainerStyle" Value="{StaticResource RadioButtonListItem}" />

        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style x:Key="HorizontalRadioButtonList" BasedOn="{StaticResource RadioButtonList}" TargetType="ListBox">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Background="Transparent" Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>
    